//下载代码，构建镜像， 执行重启docker相关任务
node{
    stage('get checkout'){
       //checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanCheckout'], [$class: 'CleanBeforeCheckout']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'oras903', url: 'https://github.com/oras903/haproxy_reload.git']]])
       
          checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'oras903', url: 'https://github.com/oras903/haproxy_reload.git']]])
          dir('src/main') {
              withDockerRegistry([url: 'http://192.168.20.10:31076']) {

              def customImage = docker.build("192.168.20.10:31076/haproxy_reload:${env.BUILD_ID}")

              customImage.push('latest') 
              }
          }
      
    }

    stage('mvn test'){
        withMaven(
            maven: 'M3') {
                sh "mvn -version"
        }
    }


    stage('deploy'){
        //执行部署脚本
        echo "deploy ......" 
    }
}
